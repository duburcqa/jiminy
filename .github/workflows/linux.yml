name: Linux CI

on:
  # Trigger the workflow on push on the master branch,
  # or for any pull request
  push:
    branches:
      - master
  pull_request:

jobs:
  build-test-and-deploy:
    name: "Build and install project, then run unit tests"
    runs-on: ubuntu-18.04

    # strategy:
    #   matrix:
    #     python-version: [2.7, 3.6]

    steps:
    - name: Checkout branch
      uses: actions/checkout@v2
    - name: Configure Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'
        architecture: 'x64'
    - name: Installing requirements
      run: sudo ./build_tools/setup.sh
    - name: Configuring Cmake
      run: |
        mkdir build install
        cd build
        cmake .. -DCOMPONENT=doxygen -DBoost_NO_SYSTEM_PATHS=OFF -DCMAKE_CXX_FLAGS=-isystem\ /usr/include/eigen3 -DCMAKE_INSTALL_PREFIX=../install
    - name: Building project
      run: |
        cd build
        make -j2
    - name: Installing project
      run: |
        cd build
        make install

    # - name: Create Release
    #   if: success() && github.repository == 'Wandercraft/jiminy' && github.event_name == 'pull_request' && github.base_ref == 'refs/heads/master'
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GH_DEPLOY }}
    #   with:
    #     tag_name: ${{ github.head_ref }}
    #     release_name: Release ${{ github.head_ref }}
    #     draft: false
    #     prerelease: false
    # - name: Archive install artifacts
    #   run: |
    #     zip -r install-linux ./install
    # - name: Upload Release Asset
    #   if: success() && github.repository == 'Wandercraft/jiminy' && github.event_name == 'pull_request' && github.base_ref == 'refs/heads/master'
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GH_DEPLOY }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./install-linux.zip
    #     asset_name: install-linux.zip
    #     asset_content_type: application/zip

  #   - name: Archive build artifacts
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: build-artifact
  #       path: build

  # test:
  #   needs: build
  #   name: "Run C++/Python unit tests"
  #   runs-on: ubuntu-18.04

  #   steps:
  #   - name: Checkout branch
  #     uses: actions/checkout@v2
  #   - name: Installing requirements
  #     run: sudo ./build_tools/setup.sh
  #   - name: Download build artifact
  #     uses: actions/download-artifact@v1
  #     with:
  #       name: build-artifact
  #       path: build
    - name: Running unit tests
      run: |
        ./build/unit/unit
        cd unit_py
        python -m unittest discover -v

  # pypi-deploy:
  #   needs: build
  #   name: "Deploy Python packages"
  #   runs-on: ubuntu-18.04

  #   steps:
  #   - name: Checkout branch
  #     uses: actions/checkout@v2
  #   - name: Installing requirements
  #     run: sudo ./build_tools/setup.sh
  #   - name: Download build artifact
  #     uses: actions/download-artifact@v1
  #     with:
  #       name: build-artifact
  #       path: build
    - name: Generating Python pip wheel
      if: success() && github.repository == 'Wandercraft/jiminy' && github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        cd build
        cmake . -DCOMPONENT=pypi -P ./cmake_install.cmake
    - name: Publishing jiminy_py Python Packages to PyPI
      if: success() && github.repository == 'Wandercraft/jiminy' && github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_DEPLOY }}
        packages_dir: build/pypi/jiminy_py/dist/
    - name: Publishing gym_jiminy Python Packages to PyPI
      if: success() && github.repository == 'Wandercraft/jiminy' && github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_DEPLOY }}
        packages_dir: build/pypi/gym_jiminy/dist/

  # github-pages-deploy:
  #   needs: build
  #   name: "Deploy Github pages"
  #   runs-on: ubuntu-18.04

  #   steps:
  #   - name: Checkout branch
  #     uses: actions/checkout@v2
  #   - name: Installing requirements
  #     run: sudo ./build_tools/setup.sh
  #   - name: Download build artifact
  #     uses: actions/download-artifact@v1
  #     with:
  #       name: build-artifact
  #       path: build
    - name: Generating and installing Doxygen documentation
      if: success() && github.repository == 'Wandercraft/jiminy' && github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        cd build
        cmake . -DCOMPONENT=doxygen -P ./cmake_install.cmake
    - name: Deploying to GitHub Pages
      if: success() && github.repository == 'Wandercraft/jiminy' && github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: crazy-max/ghaction-github-pages@v1
      with:
        target_branch: gh-pages
        build_dir: docs
      env:
        GITHUB_TOKEN: ${{ secrets.GH_DEPLOY }}
