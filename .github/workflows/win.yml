name: Windows CI (Build from source dependencies)

on:
  # Trigger the workflow on push on the master branch, or for any pull request
  push:
    branches:
      - master
  pull_request:

jobs:
  build-test-and-deploy:
    name: "Build project on Windows"
    runs-on: [windows-2019]

    env:
      BUILD_TYPE: "Release"

    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8']

    #####################################################################################

    steps:
    - name: Checkout jiminy
      uses: actions/checkout@v2

    #####################################################################################

    - name: Configure Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Setup minimal build environment
      run: |
        $ErrorActionPreference = "Stop"
        Set-PSDebug -Trace 1
        choco install pkgconfiglite -y
        python -m pip install numpy wheel
    - name: Build project dependencies
      run: |
        & "./build_tools/build_install_deps_windows.ps1"

    #####################################################################################

    - name: Configure and build jiminy
      shell: pwsh
      run: |
        $ErrorActionPreference = "Stop"
        Set-PSDebug -Trace 1

        $RootDir = "${Env:GITHUB_WORKSPACE}" -replace '\\', '/'
        $InstallDir = "$RootDir/install"

        if (Test-Path Env:/Boost_ROOT) {
          Remove-Item Env:/Boost_ROOT
        }

        if (-not (Test-Path -PathType Container $RootDir/build)) {
          New-Item -ItemType "directory" -Force -Path "$RootDir/build"
        }
        Set-Location -Path $RootDir/build
        $CmakeModulePath = "$InstallDir/share/eigen3/cmake/;$InstallDir/lib/cmake/eigenpy/;$InstallDir/CMake/" -replace '\\', '/'
        $CmakeCxxFlags = "/EHsc /bigobj -D_USE_MATH_DEFINES -DBOOST_ALL_NO_LIB -DBOOST_LIB_DIAGNOSTIC -DURDFDOM_STATIC"
        cmake -G "Visual Studio 16 2019" -T "v142" -DCMAKE_GENERATOR_PLATFORM=x64 `
              -DCMAKE_INSTALL_PREFIX="$InstallDir" `
              -DBoost_NO_SYSTEM_PATHS=TRUE -DBoost_NO_BOOST_CMAKE=TRUE `
              -DBOOST_ROOT="$InstallDir" -DBoost_INCLUDE_DIR="$InstallDir/include/boost-1.71.0" `
              -DBoost_USE_STATIC_LIBS=OFF -DPYTHON_REQUIRED_VERSION="${{ matrix.python-version }}" `
              -DBUILD_TESTING=ON -DBUILD_EXAMPLES=ON -DBUILD_PYTHON_INTERFACE=ON `
              -DCMAKE_MODULE_PATH="$CmakeModulePath" -DCMAKE_CXX_FLAGS="$CmakeCxxFlags" "$RootDir"
        cmake --build . --config "${Env:BUILD_TYPE}" --parallel 2

        if (-not (Test-Path -PathType Container "$RootDir/build/pypi/jiminy_py/src/jiminy_py/core")) {
          New-Item -ItemType "directory" -Force -Path "$RootDir/build/pypi/jiminy_py/src/jiminy_py/core"
        }
        Copy-Item -Path "$InstallDir/bin/eigenpy.dll" `
                  -Destination "$RootDir/build/pypi/jiminy_py/src/jiminy_py/core"
        Copy-Item -Path "$InstallDir/lib/boost_numpy*.dll" `
                  -Destination "$RootDir/build/pypi/jiminy_py/src/jiminy_py/core"
        Copy-Item -Path "$InstallDir/lib/boost_python*.dll" `
                  -Destination "$RootDir/build/pypi/jiminy_py/src/jiminy_py/core"
        Copy-Item -Path "$InstallDir/lib/site-packages\*" `
                  -Destination "$RootDir/build/pypi/jiminy_py/src/jiminy_py" -Recurse

        cmake --build . --target INSTALL --config "${Env:BUILD_TYPE}" --parallel 2

    #####################################################################################

    - name: Running unit tests
      shell: pwsh
      run: |
        $ErrorActionPreference = "Stop"
        Set-PSDebug -Trace 1

        & "./build/unit\${Env:BUILD_TYPE}/unit.exe"
        Set-Location -Path "./unit_py"
        python -m unittest discover -v

    #####################################################################################

    - name: Generating Python pip wheel
      if: success() && github.repository == 'Wandercraft/jiminy' && github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        Set-Location -Path "./build"
        cmake . -DCOMPONENT=pypi -P ./cmake_install.cmake
