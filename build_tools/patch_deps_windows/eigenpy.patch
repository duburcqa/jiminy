diff --git a/include/eigenpy/numpy.hpp b/include/eigenpy/numpy.hpp
index f74349d..92edaaa 100644
--- a/include/eigenpy/numpy.hpp
+++ b/include/eigenpy/numpy.hpp
@@ -11,20 +11,19 @@
 #define PY_ARRAY_UNIQUE_SYMBOL EIGENPY_ARRAY_API
 #endif
 
-// For compatibility with Numpy 2.x
-// See
+// For compatibility with Numpy 2.x. See:
 // https://numpy.org/devdocs/reference/c-api/array.html#c.NPY_API_SYMBOL_ATTRIBUTE
-#define NPY_API_SYMBOL_ATTRIBUTE EIGENPY_DLLAPI
+#define NPY_API_SYMBOL_ATTRIBUTE
 
+// Import the right Python library depending on build type
+#include <boost/python/detail/wrap_python.hpp>
 #include <numpy/numpyconfig.h>
 #ifdef NPY_1_8_API_VERSION
 #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION
 #endif
 
-/* Allow compiling against NumPy 1.x and 2.x
-   see:
-   https://github.com/numpy/numpy/blob/afea8fd66f6bdbde855f5aff0b4e73eb0213c646/doc/source/reference/c-api/array.rst#L1224
-*/
+// Allow compiling against NumPy 1.x and 2.x. See:
+// https://github.com/numpy/numpy/blob/afea8fd66f6bdbde855f5aff0b4e73eb0213c646/doc/source/reference/c-api/array.rst#L1224
 #if NPY_ABI_VERSION < 0x02000000
 #define PyArray_DescrProto PyArray_Descr
 #endif
diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -357,7 +357,7 @@
     src/type_info.cpp
     src/version.cpp)
 
-add_library(${PROJECT_NAME} SHARED ${${PROJECT_NAME}_SOURCES}
+add_library(${PROJECT_NAME} ${${PROJECT_NAME}_SOURCES}
                                    ${${PROJECT_NAME}_HEADERS})
 add_library(${PROJECT_NAME}::${PROJECT_NAME} ALIAS ${PROJECT_NAME})
 set_standard_output_directory(${PROJECT_NAME})
diff --git a/cmake/boost.cmake b/cmake/boost.cmake
--- a/cmake/boost.cmake
+++ b/cmake/boost.cmake
@@ -141,7 +141,15 @@
         "${PYTHON_EXPORT_DEPENDENCY_MACROS}\nSEARCH_FOR_BOOST_PYTHON(${BOOST_PYTHON_REQUIRED} NAME ${BOOST_PYTHON_NAME})"
     )
   endif()
+  set(Boost_USE_STATIC_LIBS OFF)
+  set(Boost_LIB_PREFIX "")
+  unset(Boost_LIBRARIES)
   find_package(Boost ${BOOST_PYTHON_REQUIRED} COMPONENTS ${BOOST_PYTHON_NAME})
+  unset(Boost_LIBRARIES)
+  if(WIN32)
+    set(Boost_LIB_PREFIX "lib")
+  endif()
+  set(Boost_USE_STATIC_LIBS ON)
   string(TOUPPER ${BOOST_PYTHON_NAME} UPPERCOMPONENT)
 
   list(APPEND LOGGING_WATCHED_VARIABLES Boost_${UPPERCOMPONENT}_FOUND
@@ -192,7 +200,6 @@
   string(REPLACE "_" "." Boost_SHORT_VERSION ${Boost_LIB_VERSION})
   if("${Boost_SHORT_VERSION}" VERSION_GREATER "1.70" OR "${Boost_SHORT_VERSION}"
                                                         VERSION_EQUAL "1.70")
-    set(BUILD_SHARED_LIBS ON)
     set(Boost_NO_BOOST_CMAKE ON)
   endif("${Boost_SHORT_VERSION}" VERSION_GREATER "1.70"
         OR "${Boost_SHORT_VERSION}" VERSION_EQUAL "1.70")
